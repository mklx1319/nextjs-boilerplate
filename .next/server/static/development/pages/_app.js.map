{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./lib/init-apollo.js","webpack:///./lib/with-apollo-client.js","webpack:///./lib/with-redux-store.js","webpack:///./pages/_app.js","webpack:///./store.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"apollo-boost\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/app\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"redux-persist\"","webpack:///external \"redux-persist/integration/react\"","webpack:///external \"redux-persist/lib/storage\"","webpack:///external \"redux-persist/lib/storage/session\"","webpack:///external \"redux-thunk\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ApolloClient, InMemoryCache, HttpLink } from \"apollo-boost\";\nimport fetch from \"isomorphic-unfetch\";\n\nlet apolloClient = null;\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!process.browser) {\n  global.fetch = fetch;\n}\n\nfunction create(initialState) {\n  // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient\n  return new ApolloClient({\n    connectToDevTools: process.browser,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    link: new HttpLink({\n      uri: process.env.GRAPH_URI, // Server URL (must be absolute)\n      credentials: \"same-origin\" // Additional fetch() options like `credentials` or `headers`\n    }),\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}\n\nexport default function initApollo(initialState) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return create(initialState);\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(initialState);\n  }\n\n  return apolloClient;\n}\n","import React from \"react\";\nimport initApollo from \"./init-apollo\";\nimport Head from \"next/head\";\nimport { getDataFromTree } from \"react-apollo\";\n\nexport default App => {\n  return class Apollo extends React.Component {\n    static displayName = \"withApollo(App)\";\n    static async getInitialProps(ctx) {\n      const { Component, router } = ctx;\n\n      let appProps = {};\n      if (App.getInitialProps) {\n        appProps = await App.getInitialProps(ctx);\n      }\n      // Run all GraphQL queries in the component tree\n      // and extract the resulting data\n      const apollo = initApollo();\n      if (!process.browser) {\n        try {\n          // Run all GraphQL queries\n          await getDataFromTree(\n            <App\n              {...appProps}\n              Component={Component}\n              router={router}\n              apolloClient={apollo}\n            />\n          );\n        } catch (error) {\n          // Prevent Apollo Client GraphQL errors from crashing SSR.\n          // Handle them in components via the data.error prop:\n          // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n          console.error(\"Error while running `getDataFromTree`\", error);\n        }\n\n        // getDataFromTree does not call componentWillUnmount\n        // head side effect therefore need to be cleared manually\n        Head.rewind();\n      }\n\n      // Extract query data from the Apollo store\n      const apolloState = apollo.cache.extract();\n\n      return {\n        ...appProps,\n        apolloState\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.apolloClient = initApollo(props.apolloState);\n    }\n\n    render() {\n      return <App {...this.props} apolloClient={this.apolloClient} />;\n    }\n  };\n};\n","import React from \"react\";\nimport { initializeStore } from \"../store\";\nconst { store } = initializeStore();\n\nconst isServer = typeof window === \"undefined\";\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return store;\n  }\n\n  // Create store if unavailable on the client and set it on the window object\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = store;\n  }\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default App => {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps(appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const reduxStore = getOrCreateStore();\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.reduxStore = reduxStore;\n\n      let appProps = {};\n      if (typeof App.getInitialProps === \"function\") {\n        appProps = await App.getInitialProps(appContext);\n      }\n\n      return {\n        ...appProps,\n        initialReduxState: reduxStore.getState()\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      return <App {...this.props} reduxStore={this.reduxStore} />;\n    }\n  };\n};\n","import App, { Container } from \"next/app\";\nimport React from \"react\";\nimport withApolloClient from \"../lib/with-apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport withReduxStore from \"../lib/with-redux-store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { initializeStore } from \"../store\";\n\nconst { persistor } = initializeStore();\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, apolloClient, reduxStore } = this.props;\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Provider store={reduxStore}>\n            <PersistGate loading={\"loading....\"} persistor={persistor}>\n              <Component {...pageProps} />\n            </PersistGate>\n          </Provider>\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApolloClient(withReduxStore(MyApp));\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storageSession from \"redux-persist/lib/storage/session\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  // storage: storageSession\n  storage\n};\n\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n};\n\nexport const actionTypes = {\n  TICK: \"TICK\",\n  INCREMENT: \"INCREMENT\",\n  DECREMENT: \"DECREMENT\",\n  RESET: \"RESET\"\n};\n\n// REDUCERS\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1\n      });\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      });\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count\n      });\n    default:\n      return state;\n  }\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\n// ACTIONS\nexport const serverRenderClock = isServer => dispatch => {\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() });\n};\n\nexport const startClock = dispatch => {\n  return setInterval(() => {\n    // Dispatch `TICK` every 1 second\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() });\n  }, 1000);\n};\n\nexport const incrementCount = () => dispatch => {\n  return dispatch({ type: actionTypes.INCREMENT });\n};\n\nexport const decrementCount = () => dispatch => {\n  return dispatch({ type: actionTypes.DECREMENT });\n};\n\nexport const resetCount = () => dispatch => {\n  return dispatch({ type: actionTypes.RESET });\n};\n\nexport function initializeStore(initialState = exampleInitialState) {\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  );\n  const persistor = persistStore(store);\n  return { store, persistor };\n\n  // store.__persistor = persistStore(store);\n  // return store;\n}\n\nexport default () => {};\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"apollo-boost\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/app\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-persist\");","module.exports = require(\"redux-persist/integration/react\");","module.exports = require(\"redux-persist/lib/storage\");","module.exports = require(\"redux-persist/lib/storage/session\");","module.exports = require(\"redux-thunk\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AARA;AASA;AACA;AACA;AACA;AAZA;AACA;AADA;AAAA;AAAA;AAkBA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AACA;AACA;AAjCA;AAmCA;AACA;AApCA;AAwCA;AAxCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AA2CA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAhDA;AAAA;AAAA;AAkDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnDA;AACA;AADA;AAAA;AAqDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AAgBA;AAhBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAmBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAxBA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3BA;AACA;AADA;AAAA;AAAA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAdA;AACA;AAgBA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAnBA;AAqBA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC1FA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}